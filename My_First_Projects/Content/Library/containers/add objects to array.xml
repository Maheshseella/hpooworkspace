<?xml version="1.0" encoding="UTF-8"?>
<flow id="04630f82-4220-49e5-a2b6-070836af0312">
  <descriptionCdata><![CDATA[04630f82-4220-49e5-a2b6-070836af0312.694aa46f-77a0-474a-9e8c-8ad243552091.description=<pre>\nInsert an object into a JSON array, optionally specifying the position at which to insert the new object. \n\nThis Operation differes from the 'Add to Array' operation in that this one will try and validate the new element as\na JSON object, whereas 'Add to Array' will just wrap the element in quotes and treat it as a string. This means \nthat the element passed into this operation must be a valid JSON object, or the operation will fail. \n\nWhen specifying the index to an array element in javascript it is possible to use the standard notation, where the 1st \nelement from the left is index 0, and the right-most element is (n-1), in an array with n elements. However, \nit is also possible to specify elements starting from the right side of the array using negative numbers, in which case\nthe right-most element is referred to by index -1 and the left-most element is at position (-1 * n), again for an array with n elements.\n\nInputs\:\n    array - String representation of a JSON array. Arrays in JSON are comma seperated lists of objects, enclosed in square brackets ( [ ] ).\nExamples\: [1,2,3] or ["one","two","three"] or [{"one"\:1, "two"\:2}, 3, "four"]\n\n    element - The element to insert into the array. As noted above, this must be a valid JSON object or the operation will fail. It can be \n                    any valid JSON object; such as a number, string, an array, or a name/value pair list. Numbers can be entered as-is, strings\n                    must be wrapped in quotes, and objects must be formated correctly (see examples below for more info)\nValid values\: Any valid JSON object\nExamples\: 1 or "a string" or {"one"\:"two", "three"\:"four"} or [1,2,3]\n\n    index -The index in the array at which to insert the new element. If index is undefined, or index is equal to the length of the array \n               (one past the last element), the new element is placed at the end of the array. See the notes above for more information\n               on using negative numbers to specify array elements.\n               If the index is valid, the new element is inserted at that position, and all remaining elements are shifted one position to the right.\n\nValid values\: Integer between (-1*n) and (n-1) for an array with n elements.\nDefault value\: undefined (insert the new element at the end of the array)\n\n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation failed. See the message in returnResult for details\n\n\nResults\:\n    returnResult - The new JSON array with the inserted element.\n\n</pre>
04630f82-4220-49e5-a2b6-070836af0312.8dfdfa5d-32da-4554-af6d-dcdec71a2b15.description=<pre>\nInsert an object into a JSON array, optionally specifying the position at which to insert the new object. \n\nThis Operation differes from the 'Add to Array' operation in that this one will try and validate the new element as\na JSON object, whereas 'Add to Array' will just wrap the element in quotes and treat it as a string. This means \nthat the element passed into this operation must be a valid JSON object, or the operation will fail. \n\nWhen specifying the index to an array element in javascript it is possible to use the standard notation, where the 1st \nelement from the left is index 0, and the right-most element is (n-1), in an array with n elements. However, \nit is also possible to specify elements starting from the right side of the array using negative numbers, in which case\nthe right-most element is referred to by index -1 and the left-most element is at position (-1 * n), again for an array with n elements.\n\nInputs\:\n    array - String representation of a JSON array. Arrays in JSON are comma seperated lists of objects, enclosed in square brackets ( [ ] ).\nExamples\: [1,2,3] or ["one","two","three"] or [{"one"\:1, "two"\:2}, 3, "four"]\n\n    element - The element to insert into the array. As noted above, this must be a valid JSON object or the operation will fail. It can be \n                    any valid JSON object; such as a number, string, an array, or a name/value pair list. Numbers can be entered as-is, strings\n                    must be wrapped in quotes, and objects must be formated correctly (see examples below for more info)\nValid values\: Any valid JSON object\nExamples\: 1 or "a string" or {"one"\:"two", "three"\:"four"} or [1,2,3]\n\n    index -The index in the array at which to insert the new element. If index is undefined, or index is equal to the length of the array \n               (one past the last element), the new element is placed at the end of the array. See the notes above for more information\n               on using negative numbers to specify array elements.\n               If the index is valid, the new element is inserted at that position, and all remaining elements are shifted one position to the right.\n\nValid values\: Integer between (-1*n) and (n-1) for an array with n elements.\nDefault value\: undefined (insert the new element at the end of the array)\n\n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation failed. See the message in returnResult for details\n\n\nResults\:\n    returnResult - The new JSON array with the inserted element.\n\n</pre>
04630f82-4220-49e5-a2b6-070836af0312.99563e28-0e3b-4f3d-a96c-d6cb1d9c9167.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and and\ncreates and populates a flow variable for each member in the object.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA".  This operation\nwould create the flow variables city and state with the values "Palo Alto" and\n"CA".\n\nA optional prefix string can be specified that will be prepended to each flow\nvariable that is created.  For example, if the prefix is set to "my.", then\nthen the above object would result in the variables my.city (with value "Palo\nAlto") and my.state (with value "CA").  This can be useful if flow variables\nalready exist with the given names to avoid overwriting their values.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object that will be converted into flow variables.  The\n      operation will return a failure if the it is not a JavaScript object.\n\n   prefix\n      The prefix to prepend to each flow variable name that will be created.\n      This is useful for creating unique variable names.\n\nResponses\n\n   success\n      The flow variables were successfully created from the object.\n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation.  You may wish to use a\n      tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   A separate output will be created for each member of the object.  Each of\n   these outputs may in turn contain another object or array.\n</pre>
04630f82-4220-49e5-a2b6-070836af0312.9fc66b29-8953-45e7-b00c-85c7f619c8fe.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
04630f82-4220-49e5-a2b6-070836af0312.cfa1099e-291b-43a5-aa24-17f6ddb3543b.description=This operation iterates through a string that contains an array in the JavaScript Object Notation format (JSON).  Each time  this operation is called, it places the value of the current array element into the "returnResult" output and advances the iterator to the next array element.\n\nThe JSON format is used to encode arrays and other values using JavaScript notation.  For arrays, this means that the values need to be enclosed by square brackets, and each element in the array can be a string (enclosed by quotes), a number, true, false, null, or  nested array or object.  Commas are always used as delimiters between array elements, and they can also appear within string elements. \n\nThe benefits of JavaScript arrays are that delimiters are fixed and cannot be confused with data, and that complex nesting of arrays and objects are supported.  The description of the enclosing folder, /Library/Utility Operations/Container/JavaScript Objects has more examples, and the JSON format is described completely at http\://www.json.org.\n\nInputs\:\n    array - The JavaScript array that will be iterated through. A normal OO list is NOT a JavaScript array.\nExamples\:\n    For example, the following is a simple JSON array\:\n        [ "cat", "dog", "horse" ]\n    The equivalent OO list (that is not a JavaScript array) is\:\n        cat,dog,horse\n\n Results\:\n    returnResult - This is the primary output and contains the current array element or an exception message if something went wrong.  When incorporating this operation into a flow, you should assign a meaningful result value from this field.\n    Result - This output field contains the value from the "returnResult" field. \n\nResponses\:\n   has more - The iterator has not yet reached the end of the array. The "returnResult" output will be populated with the value of the current element in the array, and the iterator will advance to the next element in the array.\n   no more - The iterator has reached the end of the array, and there is no more data to return.  The iterator will become undefined after this call, which basically will reset it so that if called again, this operation will begin another iteration at the beginning of the array.\n   failure - There was some error in iterating through the list, and the "returnResult" output will contain information about the error. This will occur if the input array is not a valid JavaScript array. You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with JavaScript Object Notation.\n\nNotes\:\n1. Modifying the contents of the array during iteration is not generally supported, but will be safe as long as the affected item(s) are beyond the current position of the iterator.  The iterator keeps track of where it is in the array by position.  If items are added or removed to the list in a position preceding the iterator, it may cause the iterator to return results that are not obvious.  For example, if the array contains [ "a", "b", "c" ] and the iterator is positioned on the second element, "b" and the first element is removed, then the iterator will now be at the last element in the list, "c".\n2. There is currently a limitation that a flow can only have one of these array iterator steps active at a time without causing possible conflicts. In other words, if you need to iterate through a nested array, you should use a sub-flow to process the inner array.  You may have two or more of these array iterators in the same flow as long as each iterator reaches the end of its array before the next one begins.\n3. Note that since JavaScript arrays may contain nested arrays or other objects, the value returned in "returnResult" field may also require further processing.\n
04630f82-4220-49e5-a2b6-070836af0312.d38b07c8-1c3c-4f7b-8ee2-728fdfb18216.description=<pre>\nThis operation does not do anything. It can be used to filter flow variables by defining them as inputs and filtering them in the Results tab.\n\nInputs\:\n    field1 \u2013 An optional input that can be used for filtering flow variables.\n    field2 \u2013 An optional input that can be used for filtering flow variables.\n    field3 \u2013 An optional input that can be used for filtering flow variables.\n    field4 \u2013 An optional input that can be used for filtering flow variables.\n\nResults\:\n    returnResult - This is the primary output. It contains the value of  "field1" as it was specified at input or when filtered. \n\nResponses\:\n    success - The operation completed as stated in the description.\n</pre>
]]></descriptionCdata>
  <annotation></annotation>
  <name>add objects to array</name>
  <categories/>
  <inputs/>
  <scriptlet id="8a266ca8-b749-408d-9f87-23a80d6e5934">
    <annotation></annotation>
    <name>Operation add objects to array (04630f82-4220-49e5-a2b6-070836af0312)</name>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="85680748-e6fe-47ff-a337-130cebae47fc">
      <annotation></annotation>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="8755eed4-88f8-47b4-bf21-bac4b70b0331">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="1b0cf2d3-1643-452e-a3bb-2315b0151d26">
    <annotation></annotation>
    <name>FailureMessage</name>
    <fieldName>FailureMessage</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="d9a06cb8-a299-4414-984b-ee748b145b9f">
    <baseIcon>flow.png</baseIcon>
    <basePath>System</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <callouts/>
  <checkPointFlow>true</checkPointFlow>
  <compatibleRuntimeContext>false</compatibleRuntimeContext>
  <historyCheckPointFlow>true</historyCheckPointFlow>
  <steps>
    <step id="8dfdfa5d-32da-4554-af6d-dcdec71a2b15">
      <annotation>04630f82-4220-49e5-a2b6-070836af0312.8dfdfa5d-32da-4554-af6d-dcdec71a2b15.description</annotation>
      <name>Add Object to Array</name>
      <bounds>
        <x>332.0</x>
        <y>29.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="53b55150-a3d4-482c-8d41-69e0101c41d3">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>array</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>[]</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="e2840334-038b-45e0-aa7a-4468eb000561">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>element</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>{
  &quot;array&quot;: [
    1,
    2,
    3
   ],
   &quot;boolean&quot;: true,
   &quot;null&quot;: null,
   &quot;number&quot;: 123,
   &quot;object&quot;: {
     &quot;a&quot;: [],
     &quot;c&quot;: &quot;d&quot;,
     &quot;e&quot;: &quot;f&quot;
    }, 
    &quot;string&quot;: &quot;Hello world&quot;
}</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="78b01610-808f-4869-91ca-14c52ca2c0d8">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>index</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="57f63a04-1d93-4e73-9688-1d56c0ba0109">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>df526f1d-f5a7-498c-b4a6-e5ef3d057c01</refId>
          </destination>
          <source>
            <refId>8dfdfa5d-32da-4554-af6d-dcdec71a2b15</refId>
          </source>
          <positions>
            <point>
              <x>472.0</x>
              <y>208.0</y>
            </point>
            <point>
              <x>470.0</x>
              <y>329.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="bbf1bb81-7bf9-47f4-a460-0cd7e825dc43">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>d38b07c8-1c3c-4f7b-8ee2-728fdfb18216</refId>
          </destination>
          <source>
            <refId>8dfdfa5d-32da-4554-af6d-dcdec71a2b15</refId>
          </source>
          <positions>
            <point>
              <x>472.0</x>
              <y>208.0</y>
            </point>
            <point>
              <x>593.0</x>
              <y>322.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>ffbf0fdc-6085-4b49-bd84-e853e238331b</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="88c56a14-9206-4929-9ddb-ad582e4c1f94">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>json</contextKey>
          <expression id="b294e6d6-54a8-444c-9c4d-e9307efeef39">
            <annotation></annotation>
            <name>Result Field: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <step id="99563e28-0e3b-4f3d-a96c-d6cb1d9c9167">
      <annotation>04630f82-4220-49e5-a2b6-070836af0312.99563e28-0e3b-4f3d-a96c-d6cb1d9c9167.description</annotation>
      <name>Convert Object to Flow Variables</name>
      <bounds>
        <x>400.0</x>
        <y>363.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <userInputBinding id="b0275c48-c930-4a8e-b302-2ddc8a86be0a">
          <annotation></annotation>
          <fromContextKey>json1</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>object</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <staticBinding id="4b3595c4-e308-485d-9610-661dc8274914">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>prefix</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="31b09827-d88c-4874-887f-ddeb73dd4e5d">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>9fc66b29-8953-45e7-b00c-85c7f619c8fe</refId>
          </destination>
          <source>
            <refId>99563e28-0e3b-4f3d-a96c-d6cb1d9c9167</refId>
          </source>
          <positions>
            <point>
              <x>450.0</x>
              <y>397.0</y>
            </point>
            <point>
              <x>695.0</x>
              <y>364.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="a136e2b3-99a8-4a96-bf0e-8471ac58c7a3">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>3823f9da-1708-4865-8957-7ebc5f6d7180</refId>
          </destination>
          <source>
            <refId>99563e28-0e3b-4f3d-a96c-d6cb1d9c9167</refId>
          </source>
          <positions>
            <point>
              <x>450.0</x>
              <y>397.0</y>
            </point>
            <point>
              <x>326.0</x>
              <y>449.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>9ce72792-294c-458b-a4bc-9b6bee854b79</refId>
      </opRef>
      <assignments/>
      <throttleSize>0</throttleSize>
    </step>
    <step id="9fc66b29-8953-45e7-b00c-85c7f619c8fe">
      <annotation>04630f82-4220-49e5-a2b6-070836af0312.9fc66b29-8953-45e7-b00c-85c7f619c8fe.description</annotation>
      <name>Do Nothing</name>
      <bounds>
        <x>645.0</x>
        <y>330.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="05326528-618d-46e9-b8b2-aee8093f8dad">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>field1</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
        <staticBinding id="6c511e6b-bc63-4586-a621-cf2012ec67cf">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>field2</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
        <staticBinding id="97d515b9-1e78-402f-abf6-deecd151ddf4">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>field3</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
        <staticBinding id="24e4f24d-a142-40ed-bd3a-f5e1c5d5f7b4">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>field4</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="823c9c36-86e1-4b96-8a33-8500893f72c1">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>cfa1099e-291b-43a5-aa24-17f6ddb3543b</refId>
          </destination>
          <source>
            <refId>9fc66b29-8953-45e7-b00c-85c7f619c8fe</refId>
          </source>
          <positions>
            <point>
              <x>695.0</x>
              <y>364.0</y>
            </point>
            <point>
              <x>228.0</x>
              <y>348.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
      </opRef>
      <assignments/>
      <throttleSize>0</throttleSize>
    </step>
    <step id="694aa46f-77a0-474a-9e8c-8ad243552091">
      <annotation>04630f82-4220-49e5-a2b6-070836af0312.694aa46f-77a0-474a-9e8c-8ad243552091.description</annotation>
      <name>Add Object to Array</name>
      <bounds>
        <x>501.0</x>
        <y>216.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="77445bdc-a26a-4e12-a7da-461b0c0a72e6">
          <annotation></annotation>
          <fromContextKey>json</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>array</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>[]</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="2e95e916-45eb-418b-bf38-ffb673d9fc36">
          <annotation></annotation>
          <fromContextKey>jsonelement</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>element</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="21180a2c-1910-49bc-a736-04b46c237675">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>index</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="1459af58-3b4c-4e07-8635-6487e52f67d3">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>df526f1d-f5a7-498c-b4a6-e5ef3d057c01</refId>
          </destination>
          <source>
            <refId>694aa46f-77a0-474a-9e8c-8ad243552091</refId>
          </source>
          <positions>
            <point>
              <x>767.0</x>
              <y>364.0</y>
            </point>
            <point>
              <x>632.0</x>
              <y>128.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="a2a95ce5-38e3-415b-8602-4233f824523d">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>cfa1099e-291b-43a5-aa24-17f6ddb3543b</refId>
          </destination>
          <source>
            <refId>694aa46f-77a0-474a-9e8c-8ad243552091</refId>
          </source>
          <positions>
            <point>
              <x>551.0</x>
              <y>250.0</y>
            </point>
            <point>
              <x>228.0</x>
              <y>348.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>ffbf0fdc-6085-4b49-bd84-e853e238331b</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="697823fc-53bb-4dc9-92c4-f7117f496f2f">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>json</contextKey>
          <expression id="e8ef7fbc-0b82-46ce-8a6d-30e5c5a5679a">
            <annotation></annotation>
            <name>Result Field: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <returnStep id="df526f1d-f5a7-498c-b4a6-e5ef3d057c01">
      <annotation></annotation>
      <name>Error : failure</name>
      <bounds>
        <x>514.0</x>
        <y>12.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="ede58647-b7d5-4c2b-9ce2-770c24945a8c">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>df526f1d-f5a7-498c-b4a6-e5ef3d057c01</refId>
          </destination>
          <source>
            <refId>df526f1d-f5a7-498c-b4a6-e5ef3d057c01</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>ERROR</returnStepType>
      <assignments/>
    </returnStep>
    <returnStep id="3c6862d1-094b-4c24-85b3-94473686240c">
      <annotation></annotation>
      <name>Resolved : success</name>
      <bounds>
        <x>112.0</x>
        <y>113.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="dc579c42-a60f-49c2-abcb-c6933cf67cc5">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>3c6862d1-094b-4c24-85b3-94473686240c</refId>
          </destination>
          <source>
            <refId>3c6862d1-094b-4c24-85b3-94473686240c</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>RESOLVED</returnStepType>
      <assignments/>
    </returnStep>
    <step id="d38b07c8-1c3c-4f7b-8ee2-728fdfb18216">
      <annotation>04630f82-4220-49e5-a2b6-070836af0312.d38b07c8-1c3c-4f7b-8ee2-728fdfb18216.description</annotation>
      <name>Do Nothing</name>
      <bounds>
        <x>266.0</x>
        <y>188.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="c3c93931-d606-4ee3-8e98-5cece0466498">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>jsonelement</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>{ 
&quot;stepname&quot;:&quot;stepdesc&quot;,
&quot;stepinputs&quot;:{&quot;serverhostname&quot;:&quot;hostname&quot;,

               &quot;username&quot;:&quot;username&quot;,

               &quot;password&quot;:&quot;password&quot;,

               &quot;configuration&quot;:&quot;Network configuration&quot;
              },
&quot;Error&quot;:&quot;STDERROR&quot;
}</value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="cfe6107b-82c7-471e-8136-423492c41b36">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>694aa46f-77a0-474a-9e8c-8ad243552091</refId>
          </destination>
          <source>
            <refId>d38b07c8-1c3c-4f7b-8ee2-728fdfb18216</refId>
          </source>
          <positions>
            <point>
              <x>531.0</x>
              <y>412.0</y>
            </point>
            <point>
              <x>767.0</x>
              <y>364.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
      </opRef>
      <assignments/>
      <throttleSize>0</throttleSize>
    </step>
    <returnStep id="3823f9da-1708-4865-8957-7ebc5f6d7180">
      <annotation></annotation>
      <name>Error : failure</name>
      <bounds>
        <x>276.0</x>
        <y>415.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="0223c590-9837-481e-bc0b-5998c57939c9">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>3823f9da-1708-4865-8957-7ebc5f6d7180</refId>
          </destination>
          <source>
            <refId>3823f9da-1708-4865-8957-7ebc5f6d7180</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>ERROR</returnStepType>
      <assignments/>
    </returnStep>
    <step id="cfa1099e-291b-43a5-aa24-17f6ddb3543b">
      <annotation>04630f82-4220-49e5-a2b6-070836af0312.cfa1099e-291b-43a5-aa24-17f6ddb3543b.description</annotation>
      <name>Array Iterator</name>
      <bounds>
        <x>178.0</x>
        <y>314.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="c2d4cf54-6f27-468f-9ab0-154120b655b7">
          <annotation></annotation>
          <fromContextKey>json</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>array</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="cc89f0b6-fd21-4bcc-bc41-b30f16443be1">
          <annotation></annotation>
          <name>has more</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>has more</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>99563e28-0e3b-4f3d-a96c-d6cb1d9c9167</refId>
          </destination>
          <source>
            <refId>cfa1099e-291b-43a5-aa24-17f6ddb3543b</refId>
          </source>
          <positions>
            <point>
              <x>228.0</x>
              <y>348.0</y>
            </point>
            <point>
              <x>450.0</x>
              <y>397.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="7363d893-4d80-42b6-bd14-4d27b6d1d8d9">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>3823f9da-1708-4865-8957-7ebc5f6d7180</refId>
          </destination>
          <source>
            <refId>cfa1099e-291b-43a5-aa24-17f6ddb3543b</refId>
          </source>
          <positions>
            <point>
              <x>228.0</x>
              <y>348.0</y>
            </point>
            <point>
              <x>326.0</x>
              <y>449.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="10f0df30-5f4d-4d32-820b-00d14e82f2c1">
          <annotation></annotation>
          <name>no more</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>no more</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>3c6862d1-094b-4c24-85b3-94473686240c</refId>
          </destination>
          <source>
            <refId>cfa1099e-291b-43a5-aa24-17f6ddb3543b</refId>
          </source>
          <positions>
            <point>
              <x>228.0</x>
              <y>348.0</y>
            </point>
            <point>
              <x>162.0</x>
              <y>147.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>50efc8cb-f1e7-4123-984c-979039f22f2c</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="7ddbc52d-1ea8-4caf-ad06-71ac67c61f74">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>json1</contextKey>
          <expression id="5a680600-e196-4cae-95b5-8d23d539f03a">
            <annotation></annotation>
            <name>Result Field: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
  </steps>
  <startSteps>8dfdfa5d-32da-4554-af6d-dcdec71a2b15</startSteps>
</flow>